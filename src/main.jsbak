/**
 * Created by gubaoer on 17/4/18.
 */


import Vue from 'vue'
import qs from 'qs'
// import HTTP from 'vue-resource'
import {
    Button,
    Select,
    Row,
    Col,
    Pagination,
    Table,
    TableColumn,
    Form,
    FormItem,
    Input,
    Dialog,
    Option
} from 'element-ui'
import App from './App.vue'
import 'element-ui/lib/theme-default/index.css'
import lang from 'element-ui/lib/locale/lang/en'
import locale from 'element-ui/lib/locale'

// more grace import third package !
import moment from 'moment'
import axios from 'axios'
import curvejs from 'curvejs'

let Base64 = require('js-base64').Base64;

const addCookie = function(objName, objValue, objHours){//添加cookie
    var str = objName + "=" + escape(objValue);
    if (objHours > 0) {//为0时不设定过期时间，浏览器关闭时cookie自动消失
        var date = new Date();
        var ms = objHours * 3600 * 1000;
        date.setTime(date.getTime() + ms);
        str += "; expires=" + date.toGMTString();
    }
    document.cookie = str;
    alert("添加cookie成功");
}

const getToken =function () {
    var cookie = window.document.cookie.match('(^|;) ?' + "TOKEN_COOKIE" + '=([^;]*)(;|$)');
    console.log(cookie);
    if (cookie){
        return Base64.decode(cookie[2])['token'];
    }
    return '';
}

let pending = []
let CancelToken = axios.CancelToken
let removePending = (config, f) => {
    let flagUrl = config.url + '&' + config.method
    if (pending.indexOf(flagUrl) !== -1) {
        if (f) {
            f() // 执行取消操作
        } else {
            pending.splice(pending.indexOf(flagUrl), 1)// 把这条记录从数组中移除
        }
    } else {
        if (f) {
            pending.push(flagUrl)
        }
    }
}


// axios.defaults.baseURL = 'http://localhost:8080';
// axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';
/*axios.interceptors.request.use(function (config) {
    console.log("before request");
    console.log(pending);
    console.log('我是拦截')
    config.cancelToken = new CancelToken((c) => {
        removePending(config, c)
    })
    console.log(pending);
    config.headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Token': getToken()
    };
    return config;
}, function (error) {
    return Promise.reject(error);
});*/
// axios.defaults.headers['Token'] = getToken();
// axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';
/*axios.interceptors.request.use(
    config => {
        if (config.method === "OPTIONS"){
            return
        }
        // config.cancelToken = new CancelToken((c) => {
        //     removePending(config, c)
        // })
        config.headers={
            'token': 'foobar',
            'Content-Type': 'application/x-www-form-urlencoded'
        }

        return config
    },
    err => {
        return Promise.reject(err)
    });*/

// http response 拦截器
axios.interceptors.response.use(
    response => {
        removePending(response.config)
        console.log(response)
        return response
    },


    error => {
        pending = []
        return { data: {error: error} } // 返回接口返回的错误信息
    })

/*axios.interceptors.response.use(function (response) {
    removePending(response.config);
    console.log(response.headers);
    return response;
}, function (error) {
    return { data: { } };
});*/

Object.defineProperty(Vue.prototype, '$moment', { value: moment });
Object.defineProperty(Vue.prototype, '$axios', { value: axios });
Object.defineProperty(Vue.prototype, '$curvejs', { value: curvejs });

Vue.use(Button);
Vue.use(Select);
Vue.use(Row);
Vue.use(Col);
Vue.use(Pagination);
Vue.use(Table);
Vue.use(TableColumn);
Vue.use(Form);
Vue.use(FormItem);
Vue.use(Input);
Vue.use(Dialog);
Vue.use(Option);

locale.use(lang);




// eslint-disable-next-line no-new
new Vue({
    el: '#app',
    render: h => h(App)
});

